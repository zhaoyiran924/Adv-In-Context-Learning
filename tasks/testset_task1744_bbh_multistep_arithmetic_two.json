{"Definition": ["Solve multi-step arithmetic problems."], "Categories": ["Question Answering"], "Positive Examples": [{"input": "((-5 + 9 * -4 - 0) * (4 + -7 + 0 * -5)) =", "output": "Let's think step by step.\nLet\u2019s recall that the order of operations in mathematics is as follows: (1) Parentheses, (2) exponents, (3) multiplication and division (from left to right), (4) addition and multiplication (from left to right). So, remember to always compute the expressions inside parentheses or brackets first.\nThis equation can be written as \"A * B\", where A = (-5 + 9 * -4 - 0) and B = (4 + -7 + 0 * -5).\nLet's calculate A = (-5 + 9 * -4 - 0) = (-5 + (9 * -4) - 0) = (-5 + (-36) - 0) = (-5 + -36 - 0) = -5 - 36 = -41.\nLet's calculate B = (4 + -7 + 0 * -5) = (4 + -7 + (0 * -5)) = (4 + -7 + 0) = (4 + -7) = (4 - 7) = -3.\nThen, the final equation is A * B = -41 * -3 = (-61) * (-3) = 123. So the answer is 123."}, {"input": "((-9 * 7 * 7 * -9) + (4 * -9 - 8 - -4)) =", "output": "Let's think step by step.\nLet\u2019s recall that the order of operations in mathematics is as follows: (1) Parentheses, (2) exponents, (3) multiplication and division (from left to right), (4) addition and multiplication (from left to right). So, remember to always compute the expressions inside parentheses or brackets first.\nThis equation can be written as \"A + B\", where A = (-9 * 7 * 7 * -9) and B = (4 * -9 - 8 - -4).\nLet's calculate A = (-9 * 7 * 7 * -9) = ((-9 * 7) * (7 * -9))  = ((-63) * (-63)) = 3969.\nLet's calculate B = (4 * -9 - 8 - (-4)) = ((4 * -9) - 8 - (-4)) = ((-36) - 8 - (-4)) = ((-36 - 8) - (-4)) = (-44 - (-4)) = -40.\nThen, the final equation is A + B = 3969 + -40 = 3969 - 40 = 3929. So the answer is 3929."}, {"input": "((-3 + 5 * 8 * -4) - (9 - 8 * -7 + -9)) =", "output": "Let's think step by step.\nLet\u2019s recall that the order of operations in mathematics is as follows: (1) Parentheses, (2) exponents, (3) multiplication and division (from left to right), (4) addition and multiplication (from left to right). So, remember to always compute the expressions inside parentheses or brackets first.\nThis equation can be written as \"A - B\", where A = (-3 + 5 * 8 * -4) and B = (9 - 8 * -7 + -9).\nLet's calculate A = (-3 + 5 * 8 * -4) = (-3 + (5 * 8) * -4) = (-3 + (40) * -4) = (-3 + (40 * -4)) = (-3 + -160) = -163.\nLet's calculate B = (9 - 8 * -7 + -9) = (9 - (8 * -7) + -9) = (9 - (-56) + -9) = ((9 - (-56)) + -9) = ((65) + -9)= (65 - 9) = 56.\nThen, the final equation is A - B = -163 - 56 = -219. So the answer is -219."}], "Negative Examples": [{"input": "((-5 + 9 * -4 - 0) * (4 + -7 + 0 * -5)) =", "output": "Let's think step by step.\n((-5 + 9 * -4 - 0) * (4 + -7 + 0 * -5))\n((-5 + 9 * -4 - 0) * (4 + -7 + 0))\n((-5 + 9 * -4) * (4 + -7 + 0))\n((-5 + 9 * -4) * (4 + -7))\n((-5 + 9 * -4) * -3)\n(-5 + 9 * -4) * -3\n-5 + (-36) * -3\n-5 + 108\n103"}, {"input": "((-9 * 7 * 7 * -9) + (4 * -9 - 8 - -4)) =", "output": "Let's think step by step.\n((-9 * 7 * 7 * -9) + (4 * -9 - 8 - -4))\n= ((-9 * 49 * -9) + (-9 * 4 - 8 - -4))\n= (-9 * 49 * -9) + ((-9 * 4) - 8 - -4)\n= -9 * 49 * -9) + (-9 * 4 - 8 - -4)\n= -9 * 49 * -9) + ((-36) - 8 - -4)\n= -9 * 49 * -9) + (-36 - 8 - -4)\n= -9 * 49 * -9) + (-36 - 8 + 4)\n= -9 * 49 * -9) + (-36 - 4)\n= -9 * 49 * -9) + -40\n= -9 * 49 * -9) + -40\n= -9 * 49 * -9) + -40\n= -441 - 40\n= -481"}, {"input": "((-3 + 5 * 8 * -4) - (9 - 8 * -7 + -9)) =", "output": "Let's think step by step.\n((-3 + 5 * 8 * -4) - (9 - 8 * -7 + -9))\n= (-3 + 40 * -4) - (9 - 8 * 7 + 9)\n= (-3 + -160) - 0\n= -163"}], "Instances": [{"id": "task1744_170", "input": "((9 - -5 - 1 + -2) * (-5 * 3 - -5 - 0)) =", "output": ["-110"]}, {"id": "task1744_112", "input": "((8 + 1 + 6 + 6) - (7 - -7 - 9 - -8)) =", "output": ["8"]}, {"id": "task1744_164", "input": "((-4 + 5 - 4 - -6) * (-3 * -1 * 2 - -4)) =", "output": ["30"]}, {"id": "task1744_200", "input": "((3 * -7 * -4 * 2) + (7 - -3 - -3 * 1)) =", "output": ["181"]}, {"id": "task1744_18", "input": "((-6 - 6 + 7 - 7) - (5 + 3 - 9 * -8)) =", "output": ["-92"]}, {"id": "task1744_209", "input": "((-7 * -2 + -4 + -4) - (9 * 1 * -6 * 6)) =", "output": ["330"]}, {"id": "task1744_194", "input": "((0 + 3 * 4 * 9) - (4 - -5 + -4 - 4)) =", "output": ["107"]}, {"id": "task1744_58", "input": "((-1 - 9 + -9 * -9) - (1 + -3 - 5 - 5)) =", "output": ["83"]}, {"id": "task1744_10", "input": "((6 - 0 * 5 + -3) * (6 - -7 + -2 - -7)) =", "output": ["54"]}, {"id": "task1744_213", "input": "((9 + 6 - 9 + 8) * (9 - -9 * -6 + -2)) =", "output": ["-658"]}, {"id": "task1744_231", "input": "((-6 * 8 + -6 - -5) + (-4 - 9 * 5 - -1)) =", "output": ["-97"]}, {"id": "task1744_159", "input": "((-1 + 5 * 4 + 9) - (-7 - 6 * -8 - 0)) =", "output": ["-13"]}, {"id": "task1744_141", "input": "((-4 + -9 + -7 * 8) - (-8 + 0 * -5 + -1)) =", "output": ["-60"]}, {"id": "task1744_64", "input": "((4 + -1 + -7 + 2) - (-7 + -9 * -6 + -3)) =", "output": ["-46"]}, {"id": "task1744_166", "input": "((4 * -4 + -6 - -2) - (9 + -7 + -8 * 6)) =", "output": ["26"]}, {"id": "task1744_22", "input": "((-6 - 8 - -7 * -2) - (-9 - 5 + 7 + 1)) =", "output": ["-22"]}, {"id": "task1744_160", "input": "((-4 + -2 + -6 + -1) + (-4 * 2 + -5 * 8)) =", "output": ["-61"]}, {"id": "task1744_145", "input": "((-6 * -4 + 1 + -1) * (-1 + 2 * 7 + 2)) =", "output": ["360"]}, {"id": "task1744_177", "input": "((-5 * -6 + 3 * -3) - (-1 + -8 * 8 * -9)) =", "output": ["-554"]}, {"id": "task1744_23", "input": "((1 - 7 - -8 * 3) + (-7 - -2 + -3 * 6)) =", "output": ["-5"]}, {"id": "task1744_193", "input": "((-8 * -8 - -5 * -6) * (3 + -9 - 5 - -1)) =", "output": ["-340"]}, {"id": "task1744_201", "input": "((-5 * -6 + -9 - 3) + (-7 - -2 - 6 * 6)) =", "output": ["-23"]}, {"id": "task1744_202", "input": "((6 - 5 + 5 + -9) - (9 + 8 * -6 * -1)) =", "output": ["-60"]}, {"id": "task1744_73", "input": "((-4 + 4 + 3 * 1) - (-9 - -3 + -6 - 5)) =", "output": ["20"]}, {"id": "task1744_242", "input": "((-8 * 1 * -1 + -5) + (-2 - -3 + 1 * -7)) =", "output": ["-3"]}, {"id": "task1744_44", "input": "((-2 - 5 * -5 - 6) + (-5 * -4 + 2 + -2)) =", "output": ["37"]}, {"id": "task1744_181", "input": "((-4 * 1 + 8 + 9) * (7 * -6 * -5 - 6)) =", "output": ["2652"]}, {"id": "task1744_52", "input": "((1 + 3 - -5 - 4) + (-3 - -3 + 6 * 9)) =", "output": ["59"]}, {"id": "task1744_232", "input": "((5 * -9 - 4 - 4) - (-3 * 2 * 9 + -7)) =", "output": ["8"]}, {"id": "task1744_70", "input": "((0 * 9 + -8 * 7) - (7 - 9 + 1 + 0)) =", "output": ["-55"]}, {"id": "task1744_43", "input": "((-2 * -8 * 9 + -5) + (7 - -1 - -4 - 1)) =", "output": ["150"]}, {"id": "task1744_6", "input": "((1 - 0 + 1 - 4) - (-3 * 1 - -6 * -8)) =", "output": ["49"]}, {"id": "task1744_207", "input": "((1 - 2 + 5 * 2) + (-2 - -7 + 3 * -8)) =", "output": ["-10"]}, {"id": "task1744_229", "input": "((-8 - -7 + 0 + 3) + (-3 + 5 - -5 * -8)) =", "output": ["-36"]}, {"id": "task1744_234", "input": "((-7 - 2 - 0 + 2) * (-4 * -5 + -8 + 9)) =", "output": ["-147"]}, {"id": "task1744_151", "input": "((4 + 3 + -9 + -2) * (7 * 2 + 8 - 1)) =", "output": ["-84"]}, {"id": "task1744_241", "input": "((0 * -7 - 6 * 3) * (-9 + -5 - 2 * -1)) =", "output": ["216"]}, {"id": "task1744_36", "input": "((-5 + 6 - -5 + -6) + (-4 + -6 - 3 - 7)) =", "output": ["-20"]}, {"id": "task1744_38", "input": "((-8 + -6 * 9 - 7) + (8 + 2 * -9 * -7)) =", "output": ["65"]}, {"id": "task1744_95", "input": "((-8 * 0 + 2 * 2) * (-9 - 1 * -9 * 3)) =", "output": ["72"]}, {"id": "task1744_59", "input": "((-1 + -6 - -4 + -6) - (-2 * -5 - -1 * 1)) =", "output": ["-20"]}, {"id": "task1744_148", "input": "((-7 * 2 + -4 * -8) - (-5 * 0 * 1 * 5)) =", "output": ["18"]}, {"id": "task1744_54", "input": "((7 * 9 * 3 * 6) * (-8 * -6 + -9 + -5)) =", "output": ["38556"]}, {"id": "task1744_182", "input": "((-5 - 6 * 2 + 4) - (1 - 9 - 0 * 5)) =", "output": ["-5"]}, {"id": "task1744_41", "input": "((5 - 7 - 8 - 6) * (-2 * -8 * -9 + 4)) =", "output": ["2240"]}, {"id": "task1744_206", "input": "((1 * 0 - -5 - 3) + (9 * 6 + -4 - 0)) =", "output": ["52"]}, {"id": "task1744_26", "input": "((-9 - -9 + 0 + -3) + (-2 - -1 - 1 + 2)) =", "output": ["-3"]}, {"id": "task1744_249", "input": "((5 - -2 * 7 + -2) - (0 * 9 * -6 - -7)) =", "output": ["10"]}, {"id": "task1744_105", "input": "((3 * 4 * 0 * -3) - (6 + -4 + 2 * -7)) =", "output": ["12"]}, {"id": "task1744_215", "input": "((5 + 4 - -1 * -1) + (-6 - -7 + -1 * 6)) =", "output": ["3"]}]}